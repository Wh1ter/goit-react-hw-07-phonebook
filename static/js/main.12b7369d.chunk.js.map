{"version":3,"sources":["ContactForm/ContactForm.module.css","redux/app/app-actions.js","redux/app/app-operations.js","redux/app/app-reducer.js","redux/store.js","ContactForm/ContactForm.jsx","ContactList/ContactList.jsx","Filter/Filter.jsx","redux/app/contacts-selectors.js","App.js","index.js"],"names":["module","exports","axios","defaults","baseURL","addContactRequest","createAction","addContactSuccess","addContactError","deleteContactRequest","deleteContactSuccess","deleteContactError","fetchContactRequest","fetchContactSuccess","fetchContactError","filterSet","dispatch","a","actions","get","data","contact","post","then","catch","error","contactId","delete","contacts","createReducer","_","payload","state","operations","type","map","cur","name","includes","alert","types","newArrAfterDel","filter","elem","id","loading","filters","combineReducers","console","log","getDefaultMiddleware","middleware","logger","store","configureStore","reducer","app","appReducer","devTools","process","ContactForm","number","handleChange","event","currentTarget","value","setState","handleSubmit","preventDefault","contactForAdd","props","onSubmitData","reset","className","style","contactform","onSubmit","this","pattern","title","required","onChange","Component","ContactList","deleteId","Id","del","createList","data-id","onClick","uuid","defaultProps","Filter","setFilterValue","toUpperCase","setFilterToState","getFilter","getContacts","getIsLoading","getVisibleFilterArray","createSelector","newArr","App","fetchContacts","visibleArray","isLoadingContacts","formSubmitHandler","contactDelete","connect","selectors","appOperations","contactData","str","appActions","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.12b7369d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactform\":\"ContactForm_contactform__3VNZN\"};","import axios from \"axios\";\nimport { createAction } from \"@reduxjs/toolkit\";\n\n\naxios.defaults.baseURL = \"http://localhost:4040\";\n\nconst addContactRequest = createAction(\"contacts/addContactRequest\");\nconst addContactSuccess = createAction(\"contacts/addContactSuccess\");\nconst addContactError = createAction(\"contacts/addContactError\");\n\nconst deleteContactRequest = createAction(\"contacts/deleteContactRequest\");\nconst deleteContactSuccess = createAction(\"contacts/deleteContactSuccess\");\nconst deleteContactError = createAction(\"contacts/deleteContactError\");\n\nconst fetchContactRequest = createAction(\"contacts/fetchContactRequest\");\nconst fetchContactSuccess = createAction(\"contacts/fetchContactSuccess\");\nconst fetchContactError = createAction(\"contacts/fetchContactError\");\n\n\nconst filterSet = createAction(\"app/setFilterArr\");\n\n// eslint-disable-next-line\nexport default {\n  filterSet,\n  addContactRequest,\n  addContactSuccess,\n  addContactError,\n  deleteContactRequest,\n  deleteContactSuccess,\n  deleteContactError,\n  fetchContactRequest,\n  fetchContactSuccess,\n  fetchContactError,\n};\n","import axios from \"axios\";\nimport actions from \"./app-actions\";\n\n\n//ASYNC Version\nconst fetchContacts = () => async (dispatch) => {\n  dispatch(actions.fetchContactRequest());\n  try {\n    const { data } = await axios.get(\"/contacts\");\n    dispatch(actions.fetchContactSuccess(data));\n  } catch (error) {\n    dispatch(actions.deleteContactError(error));\n  }\n};\n\nconst addContact = (contact) => (dispatch) => {\n  dispatch(actions.addContactRequest());\n\n  axios\n    .post(\"/contacts\", contact)\n    .then(({ data }) => dispatch(actions.addContactSuccess(data)))\n    .catch((error) => dispatch(actions.addContactError(error)));\n};\n\nconst deleteContact = (contactId) => (dispatch) => {\n  dispatch(actions.deleteContactRequest());\n  axios\n    .delete(`/contacts/${contactId}`)\n    .then(() => dispatch(actions.deleteContactSuccess(contactId)))\n    .catch((error) => dispatch(actions.deleteContactError(error)));\n};\n\n// eslint-disable-next-line\nexport default {\n  fetchContacts,\n  addContact,\n  deleteContact,\n};\n","import { combineReducers } from \"redux\";\nimport { createReducer } from \"@reduxjs/toolkit\";\nimport actions from \"./app-actions\";\nimport operations from \"./app-operations\";\n\n\nconst contacts = createReducer([], {\n  [actions.fetchContactSuccess]: (_, { payload }) => payload,\n  [actions.addContactSuccess]: (state, { payload }) => [...state, payload],\n\n  [operations.addContact]: (state, { type, payload }) => {\n    let nameArray = state.map((cur) => cur.name);\n    if (!nameArray.includes(payload.name)) {\n      return [...state, payload];\n    } else {\n      alert(\" No !!!\");\n      return state;\n    }\n  },\n  [actions.deleteContactSuccess]: (state, { types, payload }) => {\n    let newArrAfterDel = state.filter((elem) => elem.id !== payload);\n    return [...newArrAfterDel];\n  },\n});\n\nconst loading = createReducer(false, {\n  [actions.addContactRequest]: () => true,\n  [actions.addContactSuccess]: () => false,\n  [actions.addContactError]: () => false,\n  [actions.deleteContactRequest]: () => true,\n  [actions.deleteContactSuccess]: () => false,\n  [actions.deleteContactError]: () => false,\n  [actions.fetchContactRequest]: () => true,\n  [actions.fetchContactSuccess]: () => false,\n  [actions.fetchContactError]: () => false,\n});\n\nconst filters = createReducer(\"\", {\n  [actions.filterSet]: (state, { payload }) => {\n    return payload;\n  },\n});\n\nexport default combineReducers({ contacts, filters, loading });\n","import { configureStore, getDefaultMiddleware } from \"@reduxjs/toolkit\";\nimport logger from \"redux-logger\";\nimport appReducer from \"./app/app-reducer\";\n\nconsole.log(getDefaultMiddleware());\n\nconst middleware = [...getDefaultMiddleware(), logger];\nconst store = configureStore({\n  reducer: {\n    app: appReducer,\n  },\n  middleware,\n  devTools: process.env.NODE_ENV === \"development\",\n});\n\nexport default store;\n","import style from \"./ContactForm.module.css\";\nimport React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\n\nclass ContactForm extends Component {\n  state = {\n    name: \"\",\n    number: \"\",\n  };\n  handleChange = (event) => {\n    const { name, value } = event.currentTarget;\n    this.setState({ [name]: value });\n  };\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n    let contactForAdd = { name: this.state.name, number: this.state.number };\n\n    this.props.onSubmitData(contactForAdd);\n\n    this.reset();\n  };\n\n  reset = () => {\n    this.setState({ name: \"\", number: \"\" });\n  };\n  render() {\n    return (\n      <div className={style.contactform}>\n        <form type=\"submit\" onSubmit={this.handleSubmit}>\n          <label>\n            Name\n            <input\n              type=\"text\"\n              name=\"name\"\n              pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n              title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n              required\n              onChange={this.handleChange}\n              value={this.state.name}\n            />\n          </label>\n          <label>\n            Number\n            <input\n              type=\"tel\"\n              name=\"number\"\n              pattern=\"(\\+?( |-|\\.)?\\d{1,2}( |-|\\.)?)?(\\(?\\d{3}\\)?|\\d{3})( |-|\\.)?(\\d{3}( |-|\\.)?\\d{4})\"\n              title=\"Номер телефона должен состоять из 11-12 цифр и может содержать цифры, пробелы, тире, пузатые скобки и может начинаться с +\"\n              required\n              onChange={this.handleChange}\n              value={this.state.number}\n            />\n          </label>\n\n          <button type=\"submit\">Add contact</button>\n        </form>\n      </div>\n    );\n  }\n}\n\nContactForm.propTypes = {\n  onSubmitData: PropTypes.func.isRequired,\n};\n\nexport default ContactForm;\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { uuid } from \"uuidv4\";\n\nclass ContactList extends Component {\n  deleteId = (Id) => {\n    this.props.del(Id);\n  };\n  createList = () => {\n    return this.props.contacts.map((contact) => {\n      return (\n        <li key={uuid()} id={contact.id}>\n          {`${contact.name}: ${contact.number}`}\n          <button\n            data-id={contact.id}\n            onClick={() => this.deleteId(contact.id)}\n          >\n            Delete\n          </button>\n        </li>\n      );\n    });\n  };\n\n  render() {\n    return <ul>{this.createList()}</ul>;\n  }\n}\n\nContactList.propTypes = {\n  contacts: PropTypes.array,\n  del: PropTypes.func.isRequired,\n};\n\nContactList.defaultProps = {\n  contacts: [],\n};\n\nexport default ContactList;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nclass Filter extends Component {\n  setFilterValue = event => {\n    let value = event.currentTarget.value.toUpperCase();\n    this.props.setFilterToState(value);\n  };\n\n  render() {\n    return (\n      <div>\n        <h4>Find contacts by name</h4>\n        <input onChange={this.setFilterValue}></input>\n      </div>\n    );\n  }\n}\n\nFilter.propTypes = {\n  setFilterToState: PropTypes.func.isRequired,\n};\n\nexport default Filter;","import { createSelector } from \"@reduxjs/toolkit\";\n\nconst getIsLoading = (state) => state.app.loading;\nconst getFilter = (state) => state.app.filters;\nconst getContacts = (state) => state.app.contacts;\n\nconst getVisibleFilterArray = createSelector(\n  [getContacts, getFilter],\n  (contacts, filter) => {\n    let newArr = contacts.filter(({ name }) =>\n      name.toUpperCase().includes(filter)\n    );\n    return [...newArr];\n  }\n);\n\n// eslint-disable-next-line\nexport default {\n  getIsLoading,\n  getFilter,\n  getContacts,\n  getVisibleFilterArray,\n};\n","import React, { Component } from \"react\";\nimport ContactForm from \"./ContactForm/ContactForm\";\nimport ContactList from \"./ContactList/ContactList\";\nimport Filter from \"./Filter/Filter\";\nimport appActions from \"./redux/app/app-actions\";\nimport appOperations from \"./redux/app/app-operations\";\nimport { connect } from \"react-redux\";\nimport selectors from \"./redux/app/contacts-selectors\";\n\nclass App extends Component {\n  componentDidMount() {\n    this.props.fetchContacts();\n  }\n\n  render() {\n    console.log(this.props.contacts);\n    console.log(this.props.filter);\n    console.log(this.props.visibleArray);\n\n    return (\n      <div className=\"App\">\n        <h1>Phonebook</h1>\n        {this.props.isLoadingContacts && <h2>Loading ...</h2>}\n        <ContactForm onSubmitData={this.props.formSubmitHandler} />\n        <h1>Contacts</h1>\n        <Filter setFilterToState={this.props.filterSet} />\n        <ContactList\n          contacts={this.props.visibleArray}\n          del={this.props.contactDelete}\n        />\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  isLoadingContacts: selectors.getIsLoading(state),\n  contacts: selectors.getContacts(state),\n  filter: selectors.getFilter(state),\n  visibleArray: selectors.getVisibleFilterArray(state),\n});\n\nconst mapDispatchToProrps = (dispatch) => ({\n  fetchContacts: () => dispatch(appOperations.fetchContacts()),\n  formSubmitHandler: (contactData) =>\n    dispatch(appOperations.addContact(contactData)),\n  contactDelete: (contactId) =>\n    dispatch(appOperations.deleteContact(contactId)),\n  filterSet: (str) => dispatch(appActions.filterSet(str)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProrps)(App);\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport store from \"./redux/store\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}